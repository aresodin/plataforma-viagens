{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///home/user/sbspdmnds/src/app/admin/actions.ts"],"sourcesContent":["'use server';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { revalidatePath } from 'next/cache';\n\n// Esta função cria um cliente Supabase com permissões de administrador.\n// Ela USA variáveis de ambiente e SÓ DEVE rodar no servidor.\nconst createAdminClient = () => {\n  if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.SUPABASE_SERVICE_KEY) {\n    throw new Error('Variáveis de ambiente do Supabase não configuradas.');\n  }\n  return createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL,\n    process.env.SUPABASE_SERVICE_KEY,\n    {\n      auth: {\n        autoRefreshToken: false,\n        persistSession: false,\n      },\n    }\n  );\n};\n\n// Ação para buscar todos os usuários e suas permissões\nexport async function getUsers() {\n  const supabaseAdmin = createAdminClient();\n\n  const { data: { users: authUsers }, error: authError } = await supabaseAdmin.auth.admin.listUsers();\n  if (authError) {\n    console.error(\"Erro ao buscar usuários:\", authError);\n    return { error: authError };\n  }\n\n  const { data: roles, error: rolesError } = await supabaseAdmin\n    .from('user_roles')\n    .select('user_id, role');\n  if (rolesError) {\n    console.error(\"Erro ao buscar permissões:\", rolesError);\n    return { error: rolesError };\n  }\n\n  const rolesMap = new Map(roles.map(r => [r.user_id, r.role]));\n\n  const combinedUsers = authUsers.map(user => ({\n    id: user.id,\n    email: user.email,\n    role: rolesMap.get(user.id) || 'USER',\n  }));\n\n  return { users: combinedUsers };\n}\n\n// Ação para definir a permissão de um usuário\nexport async function updateUserRole(targetUserId: string, newRole: 'ADMIN' | 'USER') {\n  const supabaseAdmin = createAdminClient();\n  \n  const { data, error } = await supabaseAdmin\n    .from('user_roles')\n    .upsert({ user_id: targetUserId, role: newRole }, { onConflict: 'user_id' })\n    .select();\n    \n  if (error) {\n    console.error(\"Erro ao atualizar permissão:\", error);\n    return { error };\n  }\n\n  // Limpa o cache da página de admin para que os dados sejam recarregados\n  revalidatePath('/admin');\n  return { success: true };\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;;;;;AAEA,wEAAwE;AACxE,6DAA6D;AAC7D,MAAM,oBAAoB;IACxB,IAAI,iFAAyC,CAAC,QAAQ,GAAG,CAAC,oBAAoB,EAAE;QAC9E,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,IAAA,uMAAY,gFAEjB,QAAQ,GAAG,CAAC,oBAAoB,EAChC;QACE,MAAM;YACJ,kBAAkB;YAClB,gBAAgB;QAClB;IACF;AAEJ;AAGO,eAAe;IACpB,MAAM,gBAAgB;IAEtB,MAAM,EAAE,MAAM,EAAE,OAAO,SAAS,EAAE,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,cAAc,IAAI,CAAC,KAAK,CAAC,SAAS;IACjG,IAAI,WAAW;QACb,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO;YAAE,OAAO;QAAU;IAC5B;IAEA,MAAM,EAAE,MAAM,KAAK,EAAE,OAAO,UAAU,EAAE,GAAG,MAAM,cAC9C,IAAI,CAAC,cACL,MAAM,CAAC;IACV,IAAI,YAAY;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;YAAE,OAAO;QAAW;IAC7B;IAEA,MAAM,WAAW,IAAI,IAAI,MAAM,GAAG,CAAC,CAAA,IAAK;YAAC,EAAE,OAAO;YAAE,EAAE,IAAI;SAAC;IAE3D,MAAM,gBAAgB,UAAU,GAAG,CAAC,CAAA,OAAQ,CAAC;YAC3C,IAAI,KAAK,EAAE;YACX,OAAO,KAAK,KAAK;YACjB,MAAM,SAAS,GAAG,CAAC,KAAK,EAAE,KAAK;QACjC,CAAC;IAED,OAAO;QAAE,OAAO;IAAc;AAChC;AAGO,eAAe,eAAe,YAAoB,EAAE,OAAyB;IAClF,MAAM,gBAAgB;IAEtB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,cAC3B,IAAI,CAAC,cACL,MAAM,CAAC;QAAE,SAAS;QAAc,MAAM;IAAQ,GAAG;QAAE,YAAY;IAAU,GACzE,MAAM;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;YAAE;QAAM;IACjB;IAEA,wEAAwE;IACxE,IAAA,+IAAc,EAAC;IACf,OAAO;QAAE,SAAS;IAAK;AACzB;;;IA7CsB;IA6BA;;AA7BA,+OAAA;AA6BA,+OAAA","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///home/user/sbspdmnds/.next-internal/server/app/admin/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getUsers as '0019b974b6cf46e725928bea2998c35e9bbb6c7a8a'} from 'ACTIONS_MODULE0'\nexport {updateUserRole as '60fa609c4b2fc434374811bf3532cb1f23e24f423e'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///home/user/sbspdmnds/src/app/admin/page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///home/user/sbspdmnds/src/app/admin/page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAsQ,GACnS,oCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}