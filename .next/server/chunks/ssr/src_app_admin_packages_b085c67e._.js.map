{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/sbspdmnds/src/app/admin/packages/actions.ts"],"sourcesContent":["'use server';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { revalidatePath } from 'next/cache';\nimport { z } from 'zod';\n\n// Schema de validação com Zod para garantir a integridade dos dados antes de\n// enviá-los ao banco de dados. Isso adiciona uma camada extra de segurança.\nconst PackageSchema = z.object({\n  id: z.string().optional(),\n  origem: z.string().min(1, \"Origem é obrigatória.\"),\n  destino: z.string().min(1, \"Destino é obrigatório.\"),\n  data_ida: z.string().min(1, \"Data de ida é obrigatória.\"),\n  data_volta: z.string().nullable().optional(),\n  meio_transporte: z.string(),\n  companhia: z.string().nullable().optional(),\n  preco: z.coerce.number().positive(\"O preço deve ser positivo.\"),\n  disponibilidade: z.coerce.number().int().min(0, \"A disponibilidade não pode ser negativa.\"),\n  descricao: z.string().nullable().optional(),\n  imagem_url: z.string().url(\"URL da imagem inválida.\").nullable().optional(),\n  categoria: z.string().nullable().optional(),\n  ativo: z.boolean(),\n});\n\ntype PackageFormData = z.infer<typeof PackageSchema>;\n\n// Cria um cliente Supabase com permissões de administrador.\nconst createAdminClient = () => {\n  if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.SUPABASE_SERVICE_KEY) {\n    throw new Error('Variáveis de ambiente do Supabase não configuradas.');\n  }\n  return createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL,\n    process.env.SUPABASE_SERVICE_KEY\n  );\n};\n\n/**\n * Busca e retorna um pacote de viagem pelo seu ID.\n */\nexport async function getPackageById(id: string) {\n  if (!id) {\n    return { error: { message: 'ID do pacote não fornecido.' } };\n  }\n\n  const supabaseAdmin = createAdminClient();\n  const { data, error } = await supabaseAdmin\n    .from('viagens')\n    .select('*')\n    .eq('id', id)\n    .single(); // .single() garante que apenas um registro seja retornado\n\n  if (error) {\n    console.error(`Erro ao buscar pacote com ID ${id}:`, error.message);\n    return { error };\n  }\n\n  return { pkg: data };\n}\n\n/**\n * Busca e retorna todos os pacotes de viagem.\n */\nexport async function getPackages() {\n  const supabaseAdmin = createAdminClient();\n  const { data, error } = await supabaseAdmin\n    .from('viagens')\n    .select('*')\n    .order('criado_em', { ascending: false });\n\n  if (error) {\n    console.error('Erro ao buscar pacotes:', error.message);\n    return { error };\n  }\n  return { packages: data };\n}\n\n/**\n * Cria um novo pacote de viagem.\n */\nexport async function createPackage(pkgData: PackageFormData) {\n  const validated = PackageSchema.safeParse(pkgData);\n  if (!validated.success) {\n    return { error: { message: validated.error.flatten().fieldErrors }};\n  }\n  \n  const supabaseAdmin = createAdminClient();\n  const { error } = await supabaseAdmin.from('viagens').insert(validated.data);\n  \n  if (error) {\n    console.error(\"Erro ao criar pacote:\", error.message);\n    return { error };\n  }\n\n  revalidatePath('/admin/packages');\n  return { success: true };\n}\n\n/**\n * Atualiza um pacote de viagem existente.\n */\nexport async function updatePackage(pkgData: PackageFormData) {\n  const validated = PackageSchema.safeParse(pkgData);\n  if (!validated.success || !validated.data.id) {\n    return { error: { message: validated.success ? \"ID do pacote é necessário.\" : validated.error.flatten().fieldErrors }};\n  }\n\n  const { id, ...updateData } = validated.data;\n  \n  const supabaseAdmin = createAdminClient();\n  const { error } = await supabaseAdmin.from('viagens').update(updateData).eq('id', id);\n\n  if (error) {\n    console.error(\"Erro ao atualizar pacote:\", error.message);\n    return { error };\n  }\n\n  revalidatePath('/admin/packages');\n  revalidatePath(`/packages/${id}`); // Invalida a página de detalhes também\n  return { success: true };\n}\n\n/**\n * Deleta um pacote de viagem.\n */\nexport async function deletePackage(packageId: string) {\n  if (!packageId) {\n    return { error: { message: \"ID do pacote é necessário.\" } };\n  }\n  \n  const supabaseAdmin = createAdminClient();\n  const { error } = await supabaseAdmin.from('viagens').delete().eq('id', packageId);\n\n  if (error) {\n    console.error(\"Erro ao deletar pacote:\", error.message);\n    return { error };\n  }\n\n  revalidatePath('/admin/packages');\n  return { success: true };\n}\n"],"names":[],"mappings":";;;;;;;IA+DsB,cAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///home/user/sbspdmnds/src/app/admin/packages/actions.ts"],"sourcesContent":["'use server';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { revalidatePath } from 'next/cache';\nimport { z } from 'zod';\n\n// Schema de validação com Zod para garantir a integridade dos dados antes de\n// enviá-los ao banco de dados. Isso adiciona uma camada extra de segurança.\nconst PackageSchema = z.object({\n  id: z.string().optional(),\n  origem: z.string().min(1, \"Origem é obrigatória.\"),\n  destino: z.string().min(1, \"Destino é obrigatório.\"),\n  data_ida: z.string().min(1, \"Data de ida é obrigatória.\"),\n  data_volta: z.string().nullable().optional(),\n  meio_transporte: z.string(),\n  companhia: z.string().nullable().optional(),\n  preco: z.coerce.number().positive(\"O preço deve ser positivo.\"),\n  disponibilidade: z.coerce.number().int().min(0, \"A disponibilidade não pode ser negativa.\"),\n  descricao: z.string().nullable().optional(),\n  imagem_url: z.string().url(\"URL da imagem inválida.\").nullable().optional(),\n  categoria: z.string().nullable().optional(),\n  ativo: z.boolean(),\n});\n\ntype PackageFormData = z.infer<typeof PackageSchema>;\n\n// Cria um cliente Supabase com permissões de administrador.\nconst createAdminClient = () => {\n  if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.SUPABASE_SERVICE_KEY) {\n    throw new Error('Variáveis de ambiente do Supabase não configuradas.');\n  }\n  return createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL,\n    process.env.SUPABASE_SERVICE_KEY\n  );\n};\n\n/**\n * Busca e retorna um pacote de viagem pelo seu ID.\n */\nexport async function getPackageById(id: string) {\n  if (!id) {\n    return { error: { message: 'ID do pacote não fornecido.' } };\n  }\n\n  const supabaseAdmin = createAdminClient();\n  const { data, error } = await supabaseAdmin\n    .from('viagens')\n    .select('*')\n    .eq('id', id)\n    .single(); // .single() garante que apenas um registro seja retornado\n\n  if (error) {\n    console.error(`Erro ao buscar pacote com ID ${id}:`, error.message);\n    return { error };\n  }\n\n  return { pkg: data };\n}\n\n/**\n * Busca e retorna todos os pacotes de viagem.\n */\nexport async function getPackages() {\n  const supabaseAdmin = createAdminClient();\n  const { data, error } = await supabaseAdmin\n    .from('viagens')\n    .select('*')\n    .order('criado_em', { ascending: false });\n\n  if (error) {\n    console.error('Erro ao buscar pacotes:', error.message);\n    return { error };\n  }\n  return { packages: data };\n}\n\n/**\n * Cria um novo pacote de viagem.\n */\nexport async function createPackage(pkgData: PackageFormData) {\n  const validated = PackageSchema.safeParse(pkgData);\n  if (!validated.success) {\n    return { error: { message: validated.error.flatten().fieldErrors }};\n  }\n  \n  const supabaseAdmin = createAdminClient();\n  const { error } = await supabaseAdmin.from('viagens').insert(validated.data);\n  \n  if (error) {\n    console.error(\"Erro ao criar pacote:\", error.message);\n    return { error };\n  }\n\n  revalidatePath('/admin/packages');\n  return { success: true };\n}\n\n/**\n * Atualiza um pacote de viagem existente.\n */\nexport async function updatePackage(pkgData: PackageFormData) {\n  const validated = PackageSchema.safeParse(pkgData);\n  if (!validated.success || !validated.data.id) {\n    return { error: { message: validated.success ? \"ID do pacote é necessário.\" : validated.error.flatten().fieldErrors }};\n  }\n\n  const { id, ...updateData } = validated.data;\n  \n  const supabaseAdmin = createAdminClient();\n  const { error } = await supabaseAdmin.from('viagens').update(updateData).eq('id', id);\n\n  if (error) {\n    console.error(\"Erro ao atualizar pacote:\", error.message);\n    return { error };\n  }\n\n  revalidatePath('/admin/packages');\n  revalidatePath(`/packages/${id}`); // Invalida a página de detalhes também\n  return { success: true };\n}\n\n/**\n * Deleta um pacote de viagem.\n */\nexport async function deletePackage(packageId: string) {\n  if (!packageId) {\n    return { error: { message: \"ID do pacote é necessário.\" } };\n  }\n  \n  const supabaseAdmin = createAdminClient();\n  const { error } = await supabaseAdmin.from('viagens').delete().eq('id', packageId);\n\n  if (error) {\n    console.error(\"Erro ao deletar pacote:\", error.message);\n    return { error };\n  }\n\n  revalidatePath('/admin/packages');\n  return { success: true };\n}\n"],"names":[],"mappings":";;;;;;;IAgFsB,gBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/user/sbspdmnds/src/app/admin/packages/actions.ts"],"sourcesContent":["'use server';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { revalidatePath } from 'next/cache';\nimport { z } from 'zod';\n\n// Schema de validação com Zod para garantir a integridade dos dados antes de\n// enviá-los ao banco de dados. Isso adiciona uma camada extra de segurança.\nconst PackageSchema = z.object({\n  id: z.string().optional(),\n  origem: z.string().min(1, \"Origem é obrigatória.\"),\n  destino: z.string().min(1, \"Destino é obrigatório.\"),\n  data_ida: z.string().min(1, \"Data de ida é obrigatória.\"),\n  data_volta: z.string().nullable().optional(),\n  meio_transporte: z.string(),\n  companhia: z.string().nullable().optional(),\n  preco: z.coerce.number().positive(\"O preço deve ser positivo.\"),\n  disponibilidade: z.coerce.number().int().min(0, \"A disponibilidade não pode ser negativa.\"),\n  descricao: z.string().nullable().optional(),\n  imagem_url: z.string().url(\"URL da imagem inválida.\").nullable().optional(),\n  categoria: z.string().nullable().optional(),\n  ativo: z.boolean(),\n});\n\ntype PackageFormData = z.infer<typeof PackageSchema>;\n\n// Cria um cliente Supabase com permissões de administrador.\nconst createAdminClient = () => {\n  if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.SUPABASE_SERVICE_KEY) {\n    throw new Error('Variáveis de ambiente do Supabase não configuradas.');\n  }\n  return createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL,\n    process.env.SUPABASE_SERVICE_KEY\n  );\n};\n\n/**\n * Busca e retorna um pacote de viagem pelo seu ID.\n */\nexport async function getPackageById(id: string) {\n  if (!id) {\n    return { error: { message: 'ID do pacote não fornecido.' } };\n  }\n\n  const supabaseAdmin = createAdminClient();\n  const { data, error } = await supabaseAdmin\n    .from('viagens')\n    .select('*')\n    .eq('id', id)\n    .single(); // .single() garante que apenas um registro seja retornado\n\n  if (error) {\n    console.error(`Erro ao buscar pacote com ID ${id}:`, error.message);\n    return { error };\n  }\n\n  return { pkg: data };\n}\n\n/**\n * Busca e retorna todos os pacotes de viagem.\n */\nexport async function getPackages() {\n  const supabaseAdmin = createAdminClient();\n  const { data, error } = await supabaseAdmin\n    .from('viagens')\n    .select('*')\n    .order('criado_em', { ascending: false });\n\n  if (error) {\n    console.error('Erro ao buscar pacotes:', error.message);\n    return { error };\n  }\n  return { packages: data };\n}\n\n/**\n * Cria um novo pacote de viagem.\n */\nexport async function createPackage(pkgData: PackageFormData) {\n  const validated = PackageSchema.safeParse(pkgData);\n  if (!validated.success) {\n    return { error: { message: validated.error.flatten().fieldErrors }};\n  }\n  \n  const supabaseAdmin = createAdminClient();\n  const { error } = await supabaseAdmin.from('viagens').insert(validated.data);\n  \n  if (error) {\n    console.error(\"Erro ao criar pacote:\", error.message);\n    return { error };\n  }\n\n  revalidatePath('/admin/packages');\n  return { success: true };\n}\n\n/**\n * Atualiza um pacote de viagem existente.\n */\nexport async function updatePackage(pkgData: PackageFormData) {\n  const validated = PackageSchema.safeParse(pkgData);\n  if (!validated.success || !validated.data.id) {\n    return { error: { message: validated.success ? \"ID do pacote é necessário.\" : validated.error.flatten().fieldErrors }};\n  }\n\n  const { id, ...updateData } = validated.data;\n  \n  const supabaseAdmin = createAdminClient();\n  const { error } = await supabaseAdmin.from('viagens').update(updateData).eq('id', id);\n\n  if (error) {\n    console.error(\"Erro ao atualizar pacote:\", error.message);\n    return { error };\n  }\n\n  revalidatePath('/admin/packages');\n  revalidatePath(`/packages/${id}`); // Invalida a página de detalhes também\n  return { success: true };\n}\n\n/**\n * Deleta um pacote de viagem.\n */\nexport async function deletePackage(packageId: string) {\n  if (!packageId) {\n    return { error: { message: \"ID do pacote é necessário.\" } };\n  }\n  \n  const supabaseAdmin = createAdminClient();\n  const { error } = await supabaseAdmin.from('viagens').delete().eq('id', packageId);\n\n  if (error) {\n    console.error(\"Erro ao deletar pacote:\", error.message);\n    return { error };\n  }\n\n  revalidatePath('/admin/packages');\n  return { success: true };\n}\n"],"names":[],"mappings":";;;;;;;IAqGsB,gBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///home/user/sbspdmnds/src/app/admin/packages/actions.ts"],"sourcesContent":["'use server';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { revalidatePath } from 'next/cache';\nimport { z } from 'zod';\n\n// Schema de validação com Zod para garantir a integridade dos dados antes de\n// enviá-los ao banco de dados. Isso adiciona uma camada extra de segurança.\nconst PackageSchema = z.object({\n  id: z.string().optional(),\n  origem: z.string().min(1, \"Origem é obrigatória.\"),\n  destino: z.string().min(1, \"Destino é obrigatório.\"),\n  data_ida: z.string().min(1, \"Data de ida é obrigatória.\"),\n  data_volta: z.string().nullable().optional(),\n  meio_transporte: z.string(),\n  companhia: z.string().nullable().optional(),\n  preco: z.coerce.number().positive(\"O preço deve ser positivo.\"),\n  disponibilidade: z.coerce.number().int().min(0, \"A disponibilidade não pode ser negativa.\"),\n  descricao: z.string().nullable().optional(),\n  imagem_url: z.string().url(\"URL da imagem inválida.\").nullable().optional(),\n  categoria: z.string().nullable().optional(),\n  ativo: z.boolean(),\n});\n\ntype PackageFormData = z.infer<typeof PackageSchema>;\n\n// Cria um cliente Supabase com permissões de administrador.\nconst createAdminClient = () => {\n  if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.SUPABASE_SERVICE_KEY) {\n    throw new Error('Variáveis de ambiente do Supabase não configuradas.');\n  }\n  return createClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL,\n    process.env.SUPABASE_SERVICE_KEY\n  );\n};\n\n/**\n * Busca e retorna um pacote de viagem pelo seu ID.\n */\nexport async function getPackageById(id: string) {\n  if (!id) {\n    return { error: { message: 'ID do pacote não fornecido.' } };\n  }\n\n  const supabaseAdmin = createAdminClient();\n  const { data, error } = await supabaseAdmin\n    .from('viagens')\n    .select('*')\n    .eq('id', id)\n    .single(); // .single() garante que apenas um registro seja retornado\n\n  if (error) {\n    console.error(`Erro ao buscar pacote com ID ${id}:`, error.message);\n    return { error };\n  }\n\n  return { pkg: data };\n}\n\n/**\n * Busca e retorna todos os pacotes de viagem.\n */\nexport async function getPackages() {\n  const supabaseAdmin = createAdminClient();\n  const { data, error } = await supabaseAdmin\n    .from('viagens')\n    .select('*')\n    .order('criado_em', { ascending: false });\n\n  if (error) {\n    console.error('Erro ao buscar pacotes:', error.message);\n    return { error };\n  }\n  return { packages: data };\n}\n\n/**\n * Cria um novo pacote de viagem.\n */\nexport async function createPackage(pkgData: PackageFormData) {\n  const validated = PackageSchema.safeParse(pkgData);\n  if (!validated.success) {\n    return { error: { message: validated.error.flatten().fieldErrors }};\n  }\n  \n  const supabaseAdmin = createAdminClient();\n  const { error } = await supabaseAdmin.from('viagens').insert(validated.data);\n  \n  if (error) {\n    console.error(\"Erro ao criar pacote:\", error.message);\n    return { error };\n  }\n\n  revalidatePath('/admin/packages');\n  return { success: true };\n}\n\n/**\n * Atualiza um pacote de viagem existente.\n */\nexport async function updatePackage(pkgData: PackageFormData) {\n  const validated = PackageSchema.safeParse(pkgData);\n  if (!validated.success || !validated.data.id) {\n    return { error: { message: validated.success ? \"ID do pacote é necessário.\" : validated.error.flatten().fieldErrors }};\n  }\n\n  const { id, ...updateData } = validated.data;\n  \n  const supabaseAdmin = createAdminClient();\n  const { error } = await supabaseAdmin.from('viagens').update(updateData).eq('id', id);\n\n  if (error) {\n    console.error(\"Erro ao atualizar pacote:\", error.message);\n    return { error };\n  }\n\n  revalidatePath('/admin/packages');\n  revalidatePath(`/packages/${id}`); // Invalida a página de detalhes também\n  return { success: true };\n}\n\n/**\n * Deleta um pacote de viagem.\n */\nexport async function deletePackage(packageId: string) {\n  if (!packageId) {\n    return { error: { message: \"ID do pacote é necessário.\" } };\n  }\n  \n  const supabaseAdmin = createAdminClient();\n  const { error } = await supabaseAdmin.from('viagens').delete().eq('id', packageId);\n\n  if (error) {\n    console.error(\"Erro ao deletar pacote:\", error.message);\n    return { error };\n  }\n\n  revalidatePath('/admin/packages');\n  return { success: true };\n}\n"],"names":[],"mappings":";;;;;;;IA6HsB,gBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///home/user/sbspdmnds/src/app/admin/packages/PackageFormModal.tsx"],"sourcesContent":["'use client';\nimport { useEffect, useState } from 'react';\n\n// Tipagem para os dados do formulário\ntype PackageFormData = {\n  id?: string;\n  origem: string;\n  destino: string;\n  data_ida: string;\n  data_volta: string;\n  meio_transporte: string;\n  companhia: string;\n  preco: number;\n  disponibilidade: number;\n  descricao: string;\n  imagem_url: string;\n  categoria: string;\n  ativo: boolean;\n};\n\n// Props do componente\ninterface PackageFormModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (formData: PackageFormData) => void;\n  packageToEdit?: PackageFormData | null;\n  isSaving: boolean;\n}\n\nconst initialFormData: PackageFormData = {\n  origem: '',\n  destino: '',\n  data_ida: '',\n  data_volta: '',\n  meio_transporte: 'Aéreo',\n  companhia: '',\n  preco: 0,\n  disponibilidade: 0,\n  descricao: '',\n  imagem_url: '',\n  categoria: '',\n  ativo: true,\n};\n\n// Componente de Input reutilizável\nconst FormInput = (props: React.InputHTMLAttributes<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement> & { label?: string, isTextArea?: boolean, isSelect?: boolean }) => {\n  const { label, isTextArea, isSelect, ...rest } = props;\n  const commonClasses = \"w-full p-3 bg-slate-100 border border-slate-200 rounded-lg text-gray-800 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-green-500 transition-shadow\";\n  \n  return (\n    <div>\n      {label && <label className=\"text-sm font-medium text-gray-600 mb-1 block\">{label}</label>}\n      {isTextArea ? <textarea {...rest} className={commonClasses} /> :\n       isSelect ? <select {...rest} className={commonClasses} /> :\n       <input {...rest} className={commonClasses} />}\n    </div>\n  );\n};\n\nexport default function PackageFormModal({ isOpen, onClose, onSubmit, packageToEdit, isSaving }: PackageFormModalProps) {\n  const [formData, setFormData] = useState<PackageFormData>(initialFormData);\n  const formId = `package-form-${Math.random().toString(36).substring(2, 9)}`;\n\n  useEffect(() => {\n    if (packageToEdit) {\n      const formatDate = (dateString: string) => {\n        if (!dateString) return '';\n        const date = new Date(dateString);\n        return new Date(date.getTime() - (date.getTimezoneOffset() * 60000)).toISOString().slice(0, 16);\n      };\n      setFormData({ ...packageToEdit, data_ida: formatDate(packageToEdit.data_ida), data_volta: formatDate(packageToEdit.data_volta) });\n    } else {\n      setFormData(initialFormData);\n    }\n  }, [packageToEdit, isOpen]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value, type } = e.target;\n    if (type === 'checkbox') {\n      setFormData(prev => ({ ...prev, [name]: (e.target as HTMLInputElement).checked }));\n    } else {\n      setFormData(prev => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 z-50 flex justify-center items-center p-4 animate-fade-in-fast\">\n      <div className=\"bg-white rounded-xl shadow-2xl w-full max-w-3xl max-h-[95vh] flex flex-col transform transition-transform duration-300 scale-95 animate-scale-in\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <h2 className=\"text-3xl font-bold text-gray-900\">\n            {packageToEdit ? 'Editar Pacote de Viagem' : 'Adicionar Novo Pacote'}\n          </h2>\n        </div>\n\n        <form id={formId} onSubmit={handleSubmit} className=\"flex-grow overflow-y-auto p-6 space-y-5\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-x-6 gap-y-5\">\n            <FormInput name=\"destino\" value={formData.destino} onChange={handleChange} placeholder=\"Ex: Salvador, BA\" label=\"Destino\" required />\n            <FormInput name=\"origem\" value={formData.origem} onChange={handleChange} placeholder=\"Ex: São Paulo, SP\" label=\"Origem\" required />\n            \n            <FormInput type=\"datetime-local\" name=\"data_ida\" value={formData.data_ida} onChange={handleChange} label=\"Data de Ida\" required />\n            <FormInput type=\"datetime-local\" name=\"data_volta\" value={formData.data_volta} onChange={handleChange} label=\"Data de Volta\" />\n\n            <FormInput isSelect name=\"meio_transporte\" value={formData.meio_transporte} onChange={handleChange} label=\"Meio de Transporte\">\n              <option>Aéreo</option><option>Terrestre</option><option>Marítimo</option>\n            </FormInput>\n            <FormInput name=\"companhia\" value={formData.companhia} onChange={handleChange} placeholder=\"Ex: Azul, GOL\" label=\"Companhia\" />\n            \n            <FormInput type=\"number\" name=\"preco\" value={formData.preco} onChange={handleChange} placeholder=\"0.00\" label=\"Preço (BRL)\" required />\n            <FormInput type=\"number\" name=\"disponibilidade\" value={formData.disponibilidade} onChange={handleChange} placeholder=\"0\" label=\"Vagas Disponíveis\" required />\n            \n            <div className=\"md:col-span-2\"><FormInput name=\"categoria\" value={formData.categoria} onChange={handleChange} placeholder=\"Ex: Praia, Aventura, Família\" label=\"Categoria\" /></div>\n            <div className=\"md:col-span-2\"><FormInput name=\"imagem_url\" value={formData.imagem_url} onChange={handleChange} placeholder=\"https://exemplo.com/imagem.jpg\" label=\"URL da Imagem de Capa\" /></div>\n\n            <div className=\"md:col-span-2\">\n              <FormInput isTextArea name=\"descricao\" value={formData.descricao} onChange={handleChange} placeholder=\"Descreva os detalhes do pacote, o que está incluso, etc.\" label=\"Descrição do Pacote\" rows={5} />\n            </div>\n            \n            <div className=\"flex items-center gap-3 md:col-span-2 mt-2\">\n              <input type=\"checkbox\" id=\"ativo\" name=\"ativo\" checked={formData.ativo} onChange={handleChange} className=\"h-5 w-5 rounded text-green-600 focus:ring-green-500\" />\n              <label htmlFor=\"ativo\" className=\"font-medium text-gray-800\">Pacote Ativo</label>\n            </div>\n          </div>\n        </form>\n\n        <div className=\"p-6 border-t border-gray-200 bg-gray-50/50 flex justify-end gap-4 rounded-b-xl\">\n          <button type=\"button\" onClick={onClose} disabled={isSaving} className=\"py-2 px-6 bg-gray-200 text-gray-800 font-semibold rounded-lg hover:bg-gray-300 transition-all transform hover:scale-105 disabled:opacity-50\">\n            Cancelar\n          </button>\n          <button type=\"submit\" form={formId} disabled={isSaving} className=\"py-2 px-8 bg-green-600 text-white font-bold rounded-lg hover:bg-green-700 transition-all transform hover:scale-105 disabled:opacity-50 disabled:cursor-wait\">\n            {isSaving ? 'Salvando...' : 'Salvar Pacote'}\n          </button>\n        </div>\n\n        <style jsx>{`\n          form {\n            -ms-overflow-style: none;  /* IE and Edge */\n            scrollbar-width: none;  /* Firefox */\n          }\n          form::-webkit-scrollbar {\n            display: none; /* Chrome, Safari, and Opera */\n          }\n        `}</style>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file:///home/user/sbspdmnds/src/app/admin/packages/page.tsx"],"sourcesContent":["'use client';\nimport { useEffect, useState, useTransition } from 'react';\nimport { getPackages, createPackage, updatePackage, deletePackage } from './actions';\nimport PackageFormModal from './PackageFormModal'; // Importa o componente do modal\n\n// Tipagem para o pacote de viagem, baseada no schema do DB\ntype Package = {\n  id: string;\n  [key: string]: any; // Permite outras propriedades\n};\n\nexport default function AdminPackagesPage() {\n  const [packages, setPackages] = useState<Package[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [packageToEdit, setPackageToEdit] = useState<Package | null>(null);\n  const [isSaving, startTransition] = useTransition();\n\n  // Função para carregar os pacotes do servidor\n  const loadPackages = async () => {\n    setLoading(true);\n    const { packages, error } = await getPackages();\n    if (error) {\n      console.error(\"Falha ao carregar pacotes:\", error.message);\n      // TODO: Adicionar um feedback visual de erro para o usuário\n    } else if (packages) {\n      setPackages(packages as Package[]);\n    }\n    setLoading(false);\n  };\n\n  // Carrega os pacotes quando a página é montada\n  useEffect(() => {\n    loadPackages();\n  }, []);\n\n  // Funções para controlar o modal\n  const handleOpenCreateModal = () => {\n    setPackageToEdit(null);\n    setIsModalOpen(true);\n  };\n\n  const handleOpenEditModal = (pkg: Package) => {\n    setPackageToEdit(pkg);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setPackageToEdit(null);\n  };\n\n  // Função para lidar com o submit do formulário (criar ou atualizar)\n  const handleSubmit = async (formData: Omit<Package, 'id'> & { id?: string }) => {\n    startTransition(async () => {\n      const action = formData.id ? updatePackage : createPackage;\n      const result = await action(formData);\n      \n      if (result.error) {\n        console.error(\"Erro ao salvar pacote:\", result.error.message);\n        // TODO: Mostrar erro no formulário\n      } else {\n        handleCloseModal();\n        await loadPackages(); // Recarrega a lista\n      }\n    });\n  };\n\n  // Função para deletar um pacote\n  const handleDelete = async (packageId: string) => {\n    if (window.confirm(\"Tem certeza que deseja excluir este pacote? Esta ação não pode ser desfeita.\")) {\n      startTransition(async () => {\n        const result = await deletePackage(packageId);\n        if (result.error) {\n          console.error(\"Erro ao deletar pacote:\", result.error.message);\n        } else {\n          await loadPackages(); // Recarrega a lista\n        }\n      });\n    }\n  };\n\n  return (\n    <>\n      <PackageFormModal\n        isOpen={isModalOpen}\n        onClose={handleCloseModal}\n        onSubmit={handleSubmit}\n        packageToEdit={packageToEdit}\n        isSaving={isSaving}\n      />\n      <div className=\"bg-white p-8 rounded-xl shadow-lg animate-fade-in\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-3xl font-bold text-gray-900\">Gerenciamento de Pacotes</h2>\n          <button\n            onClick={handleOpenCreateModal}\n            className=\"py-2 px-5 bg-green-500 text-white font-semibold rounded-lg shadow-md hover:bg-green-600 transition-all duration-300 cursor-pointer transform hover:scale-105\"\n          >\n            + Adicionar Pacote\n          </button>\n        </div>\n        \n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full bg-white\">\n            <thead className=\"bg-slate-100\">\n              <tr>\n                <th className=\"py-3 px-5 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider\">Destino</th>\n                <th className=\"py-3 px-5 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider\">Origem</th>\n                <th className=\"py-3 px-5 text-left text-sm font-semibold text-gray-600 uppercase tracking-wider\">Preço</th>\n                <th className=\"py-3 px-5 text-center text-sm font-semibold text-gray-600 uppercase tracking-wider\">Disponibilidade</th>\n                <th className=\"py-3 px-5 text-center text-sm font-semibold text-gray-600 uppercase tracking-wider\">Ações</th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200\">\n              {loading ? (\n                <tr>\n                  <td colSpan={5} className=\"py-10 text-center\"><p className=\"text-gray-500 animate-pulse\">Carregando pacotes...</p></td>\n                </tr>\n              ) : packages.length === 0 ? (\n                <tr>\n                  <td colSpan={5} className=\"py-10 text-center\">\n                    <p className=\"text-gray-500\">Nenhum pacote cadastrado ainda.</p>\n                    <p className=\"text-gray-400 text-sm mt-1\">Clique em \"Adicionar Pacote\" para começar.</p>\n                  </td>\n                </tr>\n              ) : (\n                packages.map((pkg) => (\n                  <tr key={pkg.id} className=\"hover:bg-slate-50 transition-colors duration-200\">\n                    <td className=\"py-4 px-5 font-medium text-gray-800\">{pkg.destino}</td>\n                    <td className=\"py-4 px-5 text-gray-600\">{pkg.origem}</td>\n                    <td className=\"py-4 px-5 text-gray-600\">{new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(pkg.preco)}</td>\n                    <td className=\"py-4 px-5 text-center text-gray-600\">{pkg.disponibilidade}</td>\n                    <td className=\"py-4 px-5 text-center\">\n                      <div className=\"flex justify-center gap-4\">\n                        <button onClick={() => handleOpenEditModal(pkg)} className=\"font-medium text-sky-600 hover:text-sky-800 transition-colors cursor-pointer\">Editar</button>\n                        <button onClick={() => handleDelete(pkg.id)} disabled={isSaving} className=\"font-medium text-red-500 hover:text-red-700 transition-colors cursor-pointer disabled:opacity-50\">Excluir</button>\n                      </div>\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AAAA;AAAA;AAAA;AACA,oQAAmD,gCAAgC;AAHnF;;;;;AAWe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAY,EAAE;IACtD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAC;IAC/C,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,iNAAQ,EAAiB;IACnE,MAAM,CAAC,UAAU,gBAAgB,GAAG,IAAA,sNAAa;IAEjD,8CAA8C;IAC9C,MAAM,eAAe;QACnB,WAAW;QACX,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,MAAM,IAAA,sLAAW;QAC7C,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,8BAA8B,MAAM,OAAO;QACzD,4DAA4D;QAC9D,OAAO,IAAI,UAAU;YACnB,YAAY;QACd;QACA,WAAW;IACb;IAEA,+CAA+C;IAC/C,IAAA,kNAAS,EAAC;QACR;IACF,GAAG,EAAE;IAEL,iCAAiC;IACjC,MAAM,wBAAwB;QAC5B,iBAAiB;QACjB,eAAe;IACjB;IAEA,MAAM,sBAAsB,CAAC;QAC3B,iBAAiB;QACjB,eAAe;IACjB;IAEA,MAAM,mBAAmB;QACvB,eAAe;QACf,iBAAiB;IACnB;IAEA,oEAAoE;IACpE,MAAM,eAAe,OAAO;QAC1B,gBAAgB;YACd,MAAM,SAAS,SAAS,EAAE,GAAG,wLAAa,GAAG,wLAAa;YAC1D,MAAM,SAAS,MAAM,OAAO;YAE5B,IAAI,OAAO,KAAK,EAAE;gBAChB,QAAQ,KAAK,CAAC,0BAA0B,OAAO,KAAK,CAAC,OAAO;YAC5D,mCAAmC;YACrC,OAAO;gBACL;gBACA,MAAM,gBAAgB,oBAAoB;YAC5C;QACF;IACF;IAEA,gCAAgC;IAChC,MAAM,eAAe,OAAO;QAC1B,IAAI,OAAO,OAAO,CAAC,iFAAiF;YAClG,gBAAgB;gBACd,MAAM,SAAS,MAAM,IAAA,wLAAa,EAAC;gBACnC,IAAI,OAAO,KAAK,EAAE;oBAChB,QAAQ,KAAK,CAAC,2BAA2B,OAAO,KAAK,CAAC,OAAO;gBAC/D,OAAO;oBACL,MAAM,gBAAgB,oBAAoB;gBAC5C;YACF;QACF;IACF;IAEA,qBACE;;0BACE,8OAAC,+JAAgB;gBACf,QAAQ;gBACR,SAAS;gBACT,UAAU;gBACV,eAAe;gBACf,UAAU;;;;;;0BAEZ,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAmC;;;;;;0CACjD,8OAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;kCAKH,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAM,WAAU;;8CACf,8OAAC;oCAAM,WAAU;8CACf,cAAA,8OAAC;;0DACC,8OAAC;gDAAG,WAAU;0DAAmF;;;;;;0DACjG,8OAAC;gDAAG,WAAU;0DAAmF;;;;;;0DACjG,8OAAC;gDAAG,WAAU;0DAAmF;;;;;;0DACjG,8OAAC;gDAAG,WAAU;0DAAqF;;;;;;0DACnG,8OAAC;gDAAG,WAAU;0DAAqF;;;;;;;;;;;;;;;;;8CAGvG,8OAAC;oCAAM,WAAU;8CACd,wBACC,8OAAC;kDACC,cAAA,8OAAC;4CAAG,SAAS;4CAAG,WAAU;sDAAoB,cAAA,8OAAC;gDAAE,WAAU;0DAA8B;;;;;;;;;;;;;;;+CAEzF,SAAS,MAAM,KAAK,kBACtB,8OAAC;kDACC,cAAA,8OAAC;4CAAG,SAAS;4CAAG,WAAU;;8DACxB,8OAAC;oDAAE,WAAU;8DAAgB;;;;;;8DAC7B,8OAAC;oDAAE,WAAU;8DAA6B;;;;;;;;;;;;;;;;+CAI9C,SAAS,GAAG,CAAC,CAAC,oBACZ,8OAAC;4CAAgB,WAAU;;8DACzB,8OAAC;oDAAG,WAAU;8DAAuC,IAAI,OAAO;;;;;;8DAChE,8OAAC;oDAAG,WAAU;8DAA2B,IAAI,MAAM;;;;;;8DACnD,8OAAC;oDAAG,WAAU;8DAA2B,IAAI,KAAK,YAAY,CAAC,SAAS;wDAAE,OAAO;wDAAY,UAAU;oDAAM,GAAG,MAAM,CAAC,IAAI,KAAK;;;;;;8DAChI,8OAAC;oDAAG,WAAU;8DAAuC,IAAI,eAAe;;;;;;8DACxE,8OAAC;oDAAG,WAAU;8DACZ,cAAA,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAO,SAAS,IAAM,oBAAoB;gEAAM,WAAU;0EAA+E;;;;;;0EAC1I,8OAAC;gEAAO,SAAS,IAAM,aAAa,IAAI,EAAE;gEAAG,UAAU;gEAAU,WAAU;0EAAmG;;;;;;;;;;;;;;;;;;2CAR3K,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBjC","debugId":null}}]
}