{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/user/sbspdmnds/src/app/packages/actions.ts"],"sourcesContent":["'use server';\n\nimport { createClient } from '@supabase/supabase-js';\nimport { z } from 'zod';\n\n// --- CLIENTE SUPABASE (PÚBLICO) ---\nconst createSupabaseClient = () => {\n  // DEBUG: Verificando se as variáveis de ambiente estão sendo carregadas no servidor.\n  console.log('--- DEBUG: Verificando Variáveis de Ambiente no Servidor ---');\n  console.log('NEXT_PUBLIC_SUPABASE_URL:', process.env.NEXT_PUBLIC_SUPABASE_URL ? 'Carregada' : 'NÃO ENCONTRADA');\n  console.log('NEXT_PUBLIC_SUPABASE_ANON_KEY:', process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY ? 'Carregada' : 'NÃO ENCONTRADA');\n  console.log('----------------------------------------------------------');\n\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\n  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n  if (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error('Credenciais do Supabase não encontradas. Verifique as variáveis de ambiente.');\n  }\n  \n  return createClient(supabaseUrl, supabaseAnonKey);\n};\n\n// --- AÇÕES DE BUSCA DE DADOS ---\n\n/**\n * Busca e retorna todos os pacotes de viagem ATIVOS para exibição pública.\n */\nexport async function getPublicPackages() {\n  try {\n    const supabase = createSupabaseClient();\n    const { data, error } = await supabase\n      .from('viagens')\n      .select('*')\n      .eq('ativo', true)\n      .order('destino', { ascending: true });\n\n    if (error) throw error;\n\n    return { packages: data };\n  } catch (error) {\n    console.error(\"Erro detalhado ao buscar pacotes públicos:\", error);\n    return { error: \"Não foi possível carregar os pacotes.\" };\n  }\n}\n\n/**\n * Busca e retorna um único pacote de viagem pelo seu ID para exibição pública.\n */\nexport async function getPublicPackageById(id: string) {\n  try {\n    const supabase = createSupabaseClient();\n    const { data, error } = await supabase\n      .from('viagens')\n      .select('*')\n      .eq('id', id)\n      .single();\n\n    if (error) throw error;\n\n    return { pkg: data };\n  } catch (error) {\n    console.error(`Erro detalhado ao buscar pacote por id ${id}:`, error);\n    return { error: \"Não foi possível carregar o pacote.\" };\n  }\n}\n\n\n// --- AÇÕES DE FORMULÁRIO (MUTATIONS) ---\n\nconst ReservationSchema = z.object({\n  name: z.string().min(3, { message: 'O nome deve ter pelo menos 3 caracteres.' }),\n  email: z.string().email({ message: 'Por favor, insira um email válido.' }),\n});\n\n/**\n * Processa a submissão do formulário de reserva.\n */\nexport async function submitReservation(prevState: any, formData: FormData) {\n  try {\n    const validatedFields = ReservationSchema.safeParse({\n      name: formData.get('name'),\n      email: formData.get('email'),\n    });\n\n    if (!validatedFields.success) {\n      return {\n        message: 'Falha na validação. Por favor, verifique os campos.',\n        errors: validatedFields.error.flatten().fieldErrors,\n        success: false,\n      };\n    }\n\n    // A criação do cliente está aqui dentro para garantir que é chamada na ação\n    const supabase = createSupabaseClient();\n    console.log('Cliente Supabase criado com sucesso na Server Action.');\n    \n    // Simulação de salvamento no banco de dados\n    console.log('Reserva enviada para o pacote:', formData.get('packageId'));\n    console.log('Dados do cliente:', validatedFields.data);\n    \n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    return {\n      message: `Reserva confirmada para ${validatedFields.data.name}! Entraremos em contato em breve.`,\n      errors: { name: [], email: [] },\n      success: true,\n    };\n  } catch (e) {\n     console.error(\"Erro detalhado ao submeter reserva:\", e);\n    return {\n      message: 'Não foi possível processar a reserva. Verifique o log do servidor para detalhes.',\n      errors: { name: [], email: [] },\n      success: false,\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;IA8EsB,oBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///home/user/sbspdmnds/src/app/packages/%5Bid%5D/ReservationForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useTransition, useEffect, useActionState } from 'react';\n// CORREÇÃO: Importando a Server Action do novo local consolidado\nimport { submitReservation } from '../actions'; \n\nconst initialState = {\n  message: '',\n  errors: {\n    name: [],\n    email: [],\n  },\n  success: false,\n};\n\nexport default function ReservationForm({ packageId, availability }: { packageId: string; availability: number }) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [formState, formAction] = useActionState(submitReservation, initialState);\n  const [isPending, startTransition] = useTransition();\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => setIsModalOpen(false);\n\n  useEffect(() => {\n    if (formState.success && isModalOpen) {\n      const timer = setTimeout(() => {\n        handleCloseModal();\n      }, 4000);\n      return () => clearTimeout(timer);\n    }\n  }, [formState.success, isModalOpen]);\n\n  return (\n    <>\n      <button\n        onClick={handleOpenModal}\n        className=\"w-full py-4 px-6 bg-green-500 text-white font-bold text-lg rounded-lg shadow-lg hover:bg-green-600 transition-all duration-300 transform hover:scale-105 disabled:bg-gray-400 disabled:cursor-not-allowed disabled:transform-none\"\n        disabled={availability <= 0}\n      >\n        {availability > 0 ? 'Quero Reservar!' : 'Esgotado'}\n      </button>\n\n      {isModalOpen && (\n        <div \n          className=\"fixed inset-0 bg-black/60 backdrop-blur-sm z-50 flex items-center justify-center p-4 animate-fade-in\"\n          onClick={handleCloseModal}\n        >\n          <div \n            className=\"bg-white rounded-2xl shadow-2xl w-full max-w-md mx-auto relative transform transition-all animate-fade-in-up\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            \n            <button onClick={handleCloseModal} className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600 transition-colors z-10\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" /></svg>\n            </button>\n\n            {formState.success ? (\n              <div className=\"p-8 text-center\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16 mx-auto text-green-500 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\n                  <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Obrigado!</h2>\n                  <p className=\"text-gray-600 leading-relaxed\">{formState.message}</p>\n              </div>\n            ) : (\n              <form action={(formData) => startTransition(() => formAction(formData)) } className=\"p-8 space-y-5\">\n                <h2 className=\"text-2xl font-bold text-gray-800 text-center mb-6\">Formulário de Reserva</h2>\n                \n                <input type=\"hidden\" name=\"packageId\" value={packageId} />\n\n                <div>\n                  <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">Nome Completo</label>\n                  <input type=\"text\" id=\"name\" name=\"name\" className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500 transition\" />\n                  {formState.errors?.name && <p className=\"text-sm text-red-500 mt-1\">{formState.errors.name[0]}</p>}\n                </div>\n\n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n                  <input type=\"email\" id=\"email\" name=\"email\" className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500 transition\" />\n                  {formState.errors?.email && <p className=\"text-sm text-red-500 mt-1\">{formState.errors.email[0]}</p>}\n                </div>\n\n                {formState.message && !formState.success && <p className=\"text-sm text-red-500 text-center\">{formState.message}</p>}\n                \n                <button \n                  type=\"submit\" \n                  disabled={isPending}\n                  className=\"w-full py-3 px-6 bg-green-500 text-white font-bold rounded-lg shadow-md hover:bg-green-600 transition-all disabled:bg-gray-400 disabled:cursor-wait\"\n                >\n                  {isPending ? 'Enviando Reserva...' : 'Confirmar Reserva'}\n                </button>\n              </form>\n            )}\n\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA,iEAAiE;AACjE;AAJA;;;;AAMA,MAAM,eAAe;IACnB,SAAS;IACT,QAAQ;QACN,MAAM,EAAE;QACR,OAAO,EAAE;IACX;IACA,SAAS;AACX;AAEe,SAAS,gBAAgB,EAAE,SAAS,EAAE,YAAY,EAA+C;IAC9G,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAC;IAC/C,MAAM,CAAC,WAAW,WAAW,GAAG,IAAA,uNAAc,EAAC,mLAAiB,EAAE;IAClE,MAAM,CAAC,WAAW,gBAAgB,GAAG,IAAA,sNAAa;IAElD,MAAM,kBAAkB,IAAM,eAAe;IAC7C,MAAM,mBAAmB,IAAM,eAAe;IAE9C,IAAA,kNAAS,EAAC;QACR,IAAI,UAAU,OAAO,IAAI,aAAa;YACpC,MAAM,QAAQ,WAAW;gBACvB;YACF,GAAG;YACH,OAAO,IAAM,aAAa;QAC5B;IACF,GAAG;QAAC,UAAU,OAAO;QAAE;KAAY;IAEnC,qBACE;;0BACE,8OAAC;gBACC,SAAS;gBACT,WAAU;gBACV,UAAU,gBAAgB;0BAEzB,eAAe,IAAI,oBAAoB;;;;;;YAGzC,6BACC,8OAAC;gBACC,WAAU;gBACV,SAAS;0BAET,cAAA,8OAAC;oBACC,WAAU;oBACV,SAAS,CAAC,IAAM,EAAE,eAAe;;sCAGjC,8OAAC;4BAAO,SAAS;4BAAkB,WAAU;sCAC3C,cAAA,8OAAC;gCAAI,OAAM;gCAA6B,WAAU;gCAAU,MAAK;gCAAO,SAAQ;gCAAY,QAAO;0CAAe,cAAA,8OAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAY;oCAAI,GAAE;;;;;;;;;;;;;;;;wBAGxL,UAAU,OAAO,iBAChB,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAI,OAAM;oCAA6B,WAAU;oCAAwC,MAAK;oCAAO,SAAQ;oCAAY,QAAO;8CAAe,cAAA,8OAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAY;wCAAI,GAAE;;;;;;;;;;;8CACrN,8OAAC;oCAAG,WAAU;8CAAwC;;;;;;8CACtD,8OAAC;oCAAE,WAAU;8CAAiC,UAAU,OAAO;;;;;;;;;;;iDAGnE,8OAAC;4BAAK,QAAQ,CAAC,WAAa,gBAAgB,IAAM,WAAW;4BAAa,WAAU;;8CAClF,8OAAC;oCAAG,WAAU;8CAAoD;;;;;;8CAElE,8OAAC;oCAAM,MAAK;oCAAS,MAAK;oCAAY,OAAO;;;;;;8CAE7C,8OAAC;;sDACC,8OAAC;4CAAM,SAAQ;4CAAO,WAAU;sDAA+C;;;;;;sDAC/E,8OAAC;4CAAM,MAAK;4CAAO,IAAG;4CAAO,MAAK;4CAAO,WAAU;;;;;;wCAClD,UAAU,MAAM,EAAE,sBAAQ,8OAAC;4CAAE,WAAU;sDAA6B,UAAU,MAAM,CAAC,IAAI,CAAC,EAAE;;;;;;;;;;;;8CAG/F,8OAAC;;sDACC,8OAAC;4CAAM,SAAQ;4CAAQ,WAAU;sDAA+C;;;;;;sDAChF,8OAAC;4CAAM,MAAK;4CAAQ,IAAG;4CAAQ,MAAK;4CAAQ,WAAU;;;;;;wCACrD,UAAU,MAAM,EAAE,uBAAS,8OAAC;4CAAE,WAAU;sDAA6B,UAAU,MAAM,CAAC,KAAK,CAAC,EAAE;;;;;;;;;;;;gCAGhG,UAAU,OAAO,IAAI,CAAC,UAAU,OAAO,kBAAI,8OAAC;oCAAE,WAAU;8CAAoC,UAAU,OAAO;;;;;;8CAE9G,8OAAC;oCACC,MAAK;oCACL,UAAU;oCACV,WAAU;8CAET,YAAY,wBAAwB;;;;;;;;;;;;;;;;;;;;;;;;;AAUvD","debugId":null}}]
}